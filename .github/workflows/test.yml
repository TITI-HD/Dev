# .github/workflows/test.yml
name: 🧪 Tests Complets

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  security-scan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: 🔒 Scan de sécurité Bandit
        run: |
          pip install bandit
          bandit -r . -f html -o security-report.html
      - name: 📊 Upload security report
        uses: actions/upload-artifact@v3
        with:
          name: security-report
          path: security-report.html

  unit-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: 🐍 Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: 📦 Install dependencies
        run: pip install -r requirements.txt
      - name: 🧪 Run unit tests
        run: python -m unittest test_monitor.py

  integration-test:
    runs-on: ubuntu-latest
    needs: unit-tests
    steps:
      - uses: actions/checkout@v3
      - name: 🐍 Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: 📦 Install dependencies
        run: pip install -r requirements.txt
      - name: 🧪 Test d'intégration monitor
        env:
          SITE_URL: "https://httpbin.org/status/200"
          ALERT_EMAIL: "test@example.com"
        run: |
          # Test avec un site valide
          python monitor.py
          echo "Integration test completed"

  backup-restore-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: 🐍 Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: 📦 Install dependencies
        run: pip install -r requirements.txt
      - name: 💾 Test de sauvegarde
        run: |
          mkdir -p test-backups
          python -c "
          import monitor
          monitor.BACKUP_DIR = 'test-backups'
          monitor.SITE_URL = 'https://httpbin.org/html'
          monitor.backup_and_monitor()
          "
      - name: 🔍 Vérification des sauvegardes
        run: |
          echo "Fichiers de sauvegarde créés:"
          ls -la test-backups/
          count=$(ls test-backups/ | wc -l)
          if [ $count -gt 0 ]; then
            echo "✅ Test de sauvegarde réussi"
          else
            echo "❌ Échec du test de sauvegarde"
            exit 1
          fi