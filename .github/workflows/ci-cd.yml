name: WordPress CI/CD - Monitoring & Backup & Report

on:
  push:
    branches: ["main"]
  pull_request:
  schedule:
    - cron: '0 */3 * * *'   # Monitoring toutes les 3h
    - cron: '0 8 * * *'     # Rapport quotidien à 08h00
  workflow_dispatch:        # Lancement manuel possible

env:
  SITE_URL: "https://oupssecuretest.wordpress.com"
  MONITOR_DIR: "monitor_data"
  BACKUP_DIR: "backups"
  RESTORE_DIR: "restored"
  ALERT_EMAIL: "danieltiti882@gmail.com"
  SMTP_SERVER: "smtp.gmail.com"
  SMTP_PORT: 587
  SMTP_USER: "danieltiti882@gmail.com"
  SMTP_PASS: ${{ secrets.SMTP_PASS }}
  LOG_RETENTION_DAYS: 30
  CHECK_INTERVAL_HOURS: 3

jobs:
  monitor-and-report:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests schedule python-dateutil python-dotenv

      - name: Run monitoring
        run: python monitor.py --once

      - name: Generate report
        run: python monitor.py --report

      - name: Send latest report via email
        run: |
          python - << 'EOF'
          import os, smtplib
          from email.mime.text import MIMEText
          from pathlib import Path

          monitor_dir = Path(os.environ["MONITOR_DIR"])
          txt_files = sorted(monitor_dir.glob("report_*.txt"), reverse=True)
          if not txt_files:
              print("Aucun rapport TXT à envoyer")
              exit(1)

          latest_txt = txt_files[0]
          with latest_txt.open("r", encoding="utf-8") as f:
              content = f.read()

          msg = MIMEText(content, "plain")
          msg["Subject"] = f"WordPress Monitoring Report - {os.environ['SITE_URL']}"
          msg["From"] = os.environ["SMTP_USER"]
          msg["To"] = os.environ["ALERT_EMAIL"]

          try:
              server = smtplib.SMTP(os.environ["SMTP_SERVER"], int(os.environ["SMTP_PORT"]))
              server.starttls()
              server.login(os.environ["SMTP_USER"], os.environ["SMTP_PASS"])
              server.sendmail(os.environ["SMTP_USER"], os.environ["ALERT_EMAIL"], msg.as_string())
              server.quit()
              print(f"Email envoyé à {os.environ['ALERT_EMAIL']}")
          except Exception as e:
              print(f"Erreur envoi email: {e}")
              exit(1)
          EOF

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: monitor-artifacts
          path: |
            monitor_data/
            backups/