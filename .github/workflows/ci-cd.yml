name: 🛡️ CI/CD WordPress.com

on:
  schedule:
    - cron: '0 */6 * * *'  # Toutes les 6 heures
  workflow_dispatch:
  push:
    branches: [main]

jobs:
  security-scan:
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout du code
        uses: actions/checkout@v4

      - name: 🐍 Configuration de Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: 📦 Installation des dépendances
        run: pip install -r requirements.txt

      - name: 🔒 Scan de sécurité Bandit
        run: |
          bandit -r . -f html -o security-report.html || true

      - name: 📊 Upload du rapport de sécurité
        uses: actions/upload-artifact@v4
        with:
          name: security-report
          path: security-report.html

  monitor:
    runs-on: ubuntu-latest
    environment: production
    
    steps:
      - name: 📥 Checkout du code
        uses: actions/checkout@v4

      - name: 🐍 Configuration de Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: 📦 Installation des dépendances
        run: pip install -r requirements.txt

      - name: 🚀 Exécution de la surveillance
        env:
          SITE_URL: ${{ vars.SITE_URL }}
          TWILIO_ACCOUNT_SID: ${{ secrets.TWILIO_ACCOUNT_SID }}
          TWILIO_AUTH_TOKEN: ${{ secrets.TWILIO_AUTH_TOKEN }}
          TWILIO_PHONE_NUMBER: ${{ secrets.TWILIO_PHONE_NUMBER }}
          ALERT_PHONE_NUMBER: ${{ secrets.ALERT_PHONE_NUMBER }}
        run: python monitor.py

  backup:
    runs-on: ubuntu-latest
    environment: production
    
    steps:
      - name: 📥 Checkout du code
        uses: actions/checkout@v4

      - name: 🐍 Configuration de Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: 📦 Installation des dépendances
        run: pip install -r requirements.txt

      - name: 💾 Exécution de la sauvegarde
        env:
          SITE_URL: ${{ vars.SITE_URL }}
        run: python backup.py

        - name: Installer dépendances
        run: pip install -r requirements.txt

          - name: Run tests
        run: |
          mkdir -p backups
          python -m unittest discover
      - name: 📤 Archivage des sauvegardes
        uses: actions/upload-artifact@v4
        with:
          name: wordpress-backup-${{ github.run_id }}
          path: backups/
          retention-days: 7
        - name: Test de sauvegarde
        run: ./test_sauvegarde.sh
        - name: Test de sauvegarde
        run: |
          echo "Fichiers de sauvegarde créés:"
          ls -la "sauvegarde des épreuves/"
          count=$(ls -1 "sauvegarde des épreuves/" | wc -l)
          if [ $count -gt 0 ]; then
            echo "- Test de sauvegarde réussi"
          else
            echo "Échec du test de sauvegarde"
            exit 1
          fi
        - name: Test de sauvegarde
  run: |
    # Définir le dossier de sauvegarde
    backup_dir="sauvegarde des épreuves"
    
    # Créer le dossier s'il n'existe pas
    mkdir -p "$backup_dir"
    
    # Créer un fichier de test si le dossier est vide
    if [ -z "$(ls -A '$backup_dir')" ]; then
      echo "Ceci est un fichier de sauvegarde de test" > "$backup_dir/test_sauvegarde.txt"
    fi
    
    echo "Fichiers de sauvegarde créés:"
    ls -la "$backup_dir/"
    count=$(find "$backup_dir" -type f | wc -l)
    if [ $count -gt 0 ]; then
      echo "✅ Test de sauvegarde réussi ($count fichiers trouvés)"
    else
      echo "❌ Échec du test de sauvegarde"
      exit 1
    fi