name: WordPress CI/CD - Full Monitoring

on:
  push:
    branches: ["main"]
  pull_request:
  schedule:
    - cron: '0 */3 * * *'   # Monitoring toutes les 3h
    - cron: '30 8 * * *'    # Rapport quotidien à 08h30
  workflow_dispatch:        # Lancement manuel possible

env:
  SITE_URL: "https://oupssecuretest.wordpress.com"
  BACKUP_DIR: "backups"
  RESTORE_DIR: "restored"
  MONITOR_DIR: "monitor_data"
  ALERT_EMAIL: "danieltiti882@gmail.com"
  SMTP_SERVER: "smtp.gmail.com"
  SMTP_PORT: 587
  SMTP_USER: "danieltiti882@gmail.com"
  SMTP_PASS: ${{ secrets.SMTP_PASS }}
  LOG_RETENTION_DAYS: 30
  CHECK_INTERVAL_HOURS: 3

jobs:
  monitoring:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Installer dépendances
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt || pip install requests schedule python-dateutil python-dotenv

      - name: Lancer monitoring (exécution unique)
        id: run_monitor
        run: |
          python monitor.py --once

      - name: Vérifier génération des rapports
        run: |
          mkdir -p workflow-logs
          shopt -s nullglob
          txt_files=(monitor_data/report_*.txt)
          html_files=(monitor_data/report_*.html)
          
          if (( ${#txt_files[@]} )); then
              echo "<li style='color:green;'>Rapport TXT généré avec succès</li>" >> workflow-logs/logs.html
          else
              echo "<li style='color:red;'>ERREUR génération rapport TXT</li>" >> workflow-logs/logs.html
              exit 1
          fi

          if (( ${#html_files[@]} )); then
              echo "<li style='color:green;'>Rapport HTML généré avec succès</li>" >> workflow-logs/logs.html
          else
              echo "<li style='color:red;'>ERREUR génération rapport HTML</li>" >> workflow-logs/logs.html
              exit 1
          fi

      - name: Upload artefacts
        uses: actions/upload-artifact@v4
        with:
          name: monitoring-logs
          path: |
            monitor_data/
            workflow-logs/

      - name: Envoyer email de notification
        if: always()
        run: |
          python - << 'EOF'
          import os, smtplib
          from email.mime.text import MIMEText
          from pathlib import Path

          monitor_dir = Path(os.environ["MONITOR_DIR"])
          html_files = sorted(monitor_dir.glob("report_*.html"), reverse=True)
          if not html_files:
              print("Aucun rapport HTML à envoyer")
              exit(1)
          latest_html = html_files[0]
          with latest_html.open("r", encoding="utf-8") as f:
              content = f.read()

          msg = MIMEText(content, "html")
          msg["Subject"] = f"WordPress Monitoring Report - {os.environ['SITE_URL']}"
          msg["From"] = os.environ["SMTP_USER"]
          msg["To"] = os.environ["ALERT_EMAIL"]

          try:
              server = smtplib.SMTP(os.environ["SMTP_SERVER"], int(os.environ["SMTP_PORT"]))
              server.starttls()
              server.login(os.environ["SMTP_USER"], os.environ["SMTP_PASS"])
              server.sendmail(os.environ["SMTP_USER"], os.environ["ALERT_EMAIL"], msg.as_string())
              server.quit()
              print(f"Email envoyé à {os.environ['ALERT_EMAIL']}")
          except Exception as e:
              print(f"Erreur envoi email: {e}")
              exit(1)
          EOF