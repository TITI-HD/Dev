name: Tests et Sauvegarde

on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: pip install -r requirements.txt
    
    - name: Run basic validation
      run: |
        # Validation basique sans tests unitaires
        python -c "import monitor; print('✅ Module monitor importé avec succès')"
        python -c "import backup; print('✅ Module backup importé avec succès')"
        python -c "import app; print('✅ Module app importé avec succès')"
        echo "Validation terminée sans erreurs"
    
    - name: Create validation report
      run: |
        echo "# Rapport de validation" > validation-report.md
        echo "✅ Tous les modules Python importés avec succès" >> validation-report.md
        echo "Date: $(date)" >> validation-report.md
    
    - name: Upload validation results
      uses: actions/upload-artifact@v3
      with:
        name: validation-results
        path: validation-report.md
  
  backup:
    runs-on: ubuntu-latest
    needs: test
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: pip install -r requirements.txt
    
    - name: Create test backup directory
      run: mkdir -p test-backups
    
    - name: Simulate backup process
      run: |
        # Simulation du processus de sauvegarde
        echo "<html>Test homepage content</html>" > test-backups/test_homepage.html
        echo "<rss>Test RSS content</rss>" > test-backups/test_rss.xml
        echo "<comments>Test comments</comments>" > test-backups/test_comments.xml
        
        # Création de métadonnées de test
        echo '{"date": "'$(date)'", "files": ["test_homepage.html", "test_rss.xml", "test_comments.xml"]}' > test-backups/backup_metadata.json
        
        count=$(ls -1 test-backups/ | wc -l)
        if [ $count -gt 0 ]; then
          echo "✅ Test de sauvegarde réussi ($count fichiers créés)"
        else
          echo "❌ Échec du test de sauvegarde"
          exit 1
        fi
    
    - name: Upload backup test results
      uses: actions/upload-artifact@v3
      with:
        name: backup-test-results
        path: test-backups/