# test_server_config.ps1
# Script de test pour la configuration serveur

# Test de connexion SSH
function Test-SSHConnection {
    param($Host, $Port, $User)
    try {
        $result = ssh -p $Port ${User}@${Host} "echo 'SSH connection successful'"
        if ($result -like "*successful*") {
            Write-Host "‚úÖ Connexion SSH r√©ussie"
            return $true
        }
    } catch {
        Write-Host "‚ùå √âchec de connexion SSH: $($_.Exception.Message)"
        return $false
    }
}

# Test des services install√©s
function Test-Services {
    param($Host, $Port, $User)
    $services = @("php", "mysql", "ufw", "fail2ban")
    
    foreach ($service in $services) {
        try {
            $result = ssh -p $Port ${User}@${Host} "which $service"
            if ($result) {
                Write-Host "‚úÖ Service $service install√©"
            } else {
                Write-Host "‚ùå Service $service manquant"
                return $false
            }
        } catch {
            Write-Host "‚ùå Erreur v√©rification service $service : $($_.Exception.Message)"
            return $false
        }
    }
    return $true
}

# Test des permissions
function Test-Permissions {
    param($Host, $Port, $User)
    $paths = @("/var/www/html", "/home/wp-deploy/.ssh")
    
    foreach ($path in $paths) {
        try {
            $result = ssh -p $Port ${User}@${Host} "ls -la $path"
            Write-Host "üìÅ Permissions pour $path :"
            Write-Host $result
        } catch {
            Write-Host "‚ùå Erreur v√©rification permissions $path : $($_.Exception.Message)"
            return $false
        }
    }
    return $true
}

# Ex√©cution des tests
$Host = "votre-serveur.com"
$Port = 22
$User = "utilisateur-test"

Write-Host "üß™ D√©but des tests de configuration serveur..."

$test1 = Test-SSHConnection -Host $Host -Port $Port -User $User
$test2 = Test-Services -Host $Host -Port $Port -User $User
$test3 = Test-Permissions -Host $Host -Port $Port -User $User

if ($test1 -and $test2 -and $test3) {
    Write-Host "üéâ Tous les tests serveur pass√©s"
} else {
    Write-Host "‚ùå Certains tests serveur ont √©chou√©"
    exit 1
}